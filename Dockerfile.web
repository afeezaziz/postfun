# syntax=docker/dockerfile:1
FROM node:20-slim AS frontend-build

# Install frontend dependencies
WORKDIR /app/frontend
COPY frontend/package*.json ./
RUN npm install

# Copy frontend source and build CSS
COPY frontend/ ./
RUN npm run build

FROM python:3.11-slim

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1

# System deps (build-essential for any wheel compilation fallback)
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy built CSS from frontend stage
COPY --from=frontend-build /app/frontend/../app/static/css/output.css ./app/static/css/output.css

# Copy project files
COPY pyproject.toml README.md /app/
COPY requirements.txt /app/
COPY app /app/app
COPY wsgi.py /app/

# Install Python dependencies
RUN pip install --upgrade pip \
    && pip install -r requirements.txt

# Environment defaults
ENV PORT=8000 \
    FLASK_ENV=production \
    PYTHONPATH=/app

EXPOSE 8000

# Run with gunicorn
CMD ["gunicorn", "-w", "2", "-k", "gthread", "-b", "0.0.0.0:8000", "wsgi:app"]
